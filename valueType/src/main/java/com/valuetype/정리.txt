JPA 데이터 타입 분류
 • 엔티티 타입
    • @Entity로 정의하는 객체
    • 데이터가 변해도 식별자로 지속해서 추적 가능

 • 값 타입
    • int, Integer, String처럼 단순히 값으로 사용하는 자바 기본 타입이나 객체
    • 식별자가 없고 값만 있으므로 변경시 추적 불가


 • 값 타입 분류
    • 기본 값 타입
      • 자바 기본 타입(int, double)
      • 래퍼 클래스(Integer, Long)
      • String
     --> 생명주기를 엔티티에 의존, 값 타입은 공유 X, 기본 타입은 항상 값을 복사함, Integer 같은 래퍼 클래스나 String같은 특수한 클래스는 공유 가능한 객체이지만
         변경이 되지 않는다.


    • 임베디드 타입(복합 값 타입)
      • 새로운 값 타입을 직접 정의할 수 있음
      • JPA는 임베디드 타입이라고 함
      • 주로 기본 값 타입을 모아서 만들어서 복합 값 타임이라고 함


    • 컬렉션 값 타임


※ 임베디드 타입 사용법
  • @Embeddable: 값 타입을 정의하는 곳에 표시
  • @Embedded : 값 타입을 사용하는 곳에 표시
  • 기본 생성자 필수

  • 장점
     • 재사용
     • 높은 응집도
     • 해당 값 타입만 사용하는 의미 있는 메소드를 만들 수 있음
     • 임베디드 타입을 포함한 모든 값 타입은, 값 타입을 소유한 엔티티에 생명주기를 의존함
